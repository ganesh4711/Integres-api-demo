---
name: CI/CD Workflow
on:
  push:
    branches: 
     - integres-api-stage
jobs:
  build-push-gcr:
    name: Integrations API Build, Push to GCP and k8s Deployment through ArgoCD
    runs-on: ubuntu-latest
    env:
      LOCATION: us-central1-docker.pkg.dev
      PROJECT_ID: warehouse-management-394912
      ARTIFACT_REG: integrations
      IMAGE_NAME: integres-api-stage
      IMAGE_TAG_TEMP: ""

    steps:
    - name: Checkout Current Repository
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.REPO_TOKEN }}

    - uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.SERVICE_ACCOUNT_KEY }}

    - name: Build Docker Image
      run: docker build -t $IMAGE_NAME:latest -f Dockerfile.stage .

    # - name: Automatic Tagging of Releases
    #   id: increment-git-tag
    #   run: |
    #     bash ./scripts/git_update.sh -v major
    
    - name: Configure Docker Client
      run: |-
        gcloud auth configure-docker us-central1-docker.pkg.dev --quiet

    # - name: Tag and Push image to GCP Artifact Registry
    #   env:
    #     GIT_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
    #   run: |-
    #     docker tag $IMAGE_NAME:latest us-central1-docker.pkg.dev/$PROJECT_ID/$ARTIFACT_REG/$IMAGE_NAME:latest
    #     docker tag $IMAGE_NAME:latest us-central1-docker.pkg.dev/$PROJECT_ID/$ARTIFACT_REG/$IMAGE_NAME:$GIT_TAG
    #     docker push us-central1-docker.pkg.dev/$PROJECT_ID/$ARTIFACT_REG/$IMAGE_NAME:latest
    #     docker push us-central1-docker.pkg.dev/$PROJECT_ID/$ARTIFACT_REG/$IMAGE_NAME:$GIT_TAG

    # - name: Extract Git Tag
    #   run: echo "GIT_TAG=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV

    - name: Tag and Push image to GCP Artifact Registry
      env:
        IMAGE_TAG: ${{ github.sha }}
        # GIT_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
      run: |-
        echo "IMAGE_TAG_TEMP=$IMAGE_TAG" >> $GITHUB_ENV
        docker tag $IMAGE_NAME:latest us-central1-docker.pkg.dev/$PROJECT_ID/$ARTIFACT_REG/$IMAGE_NAME:$IMAGE_TAG
        docker tag $IMAGE_NAME:latest us-central1-docker.pkg.dev/$PROJECT_ID/$ARTIFACT_REG/$IMAGE_NAME:latest
        docker push $LOCATION/$PROJECT_ID/$ARTIFACT_REG/$IMAGE_NAME:latest
        docker push $LOCATION/$PROJECT_ID/$ARTIFACT_REG/$IMAGE_NAME:$IMAGE_TAG

    - name: Checkout Another Repository
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.REPO_TOKEN }}
        repository: SiyyadriShiva/integres-api-hc  # Specify the secondary repository
        path: integres-api-hc                 # The path where the repository will be checked out
        # ref: integres-api-stage-deploy  # Replace with your branch name

    - name: Update values-stage.yaml
      run: |
        set -e
        {
          cd integres-api-hc
          git config --global user.name 'SiyyadriShiva'
          git config --global user.email 'shiva.vasi2007@gmail.com'
          sed -i 's|APP_VERSION:.*|APP_VERSION: '${{env.IMAGE_TAG_TEMP}}'|' values-stage.yaml
          git add values-stage.yaml
          git commit -m "Update values-stage.yaml"
          git push
        } || {
             echo "git push failed! Handling error..."
        }

    - name: Checkout Another2 Repository
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.REPO_TOKEN }}
        repository: SiyyadriShiva/integres-api-hc  # Specify the secondary repository
        path: integres-api-hc                 # The path where the repository will be checked out
        # ref: integres-api-stage-deploy  # Replace with your branch name

    - name: Set up VM_35 SSH key
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.VM_PRIVATE_SSH_KEY }}
          
    - name: Clean destination directory on VM
      run: |
          ssh -T -o StrictHostKeyChecking=no vasi@35.239.35.122 -p 22 "rm -rf ~/se-integrations/integres-api-stage/*"

    # - name: List directories in $GITHUB_WORKSPACE
    #   run: ls -R $GITHUB_WORKSPACE

    - name: Copy files to VM
      run: |
          scp -o StrictHostKeyChecking=no -r $GITHUB_WORKSPACE/integres-api-hc vasi@35.239.35.122:~/se-integrations/integres-api-stage/

    - name: Deploy to VM
      run: |
          ssh -T -o StrictHostKeyChecking=no vasi@35.239.35.122 -p 22 "cd ~/se-integrations/integres-api-stage/integres-api-hc && sh deploy-stage-35.sh"
