/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.integrations.orderprocessing.kafka.schema;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class DeliveryDetails extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -9028557195639630779L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"DeliveryDetails\",\"namespace\":\"com.integrations.orderprocessing.kafka.schema\",\"fields\":[{\"name\":\"carrierTrackingDetails\",\"type\":{\"type\":\"record\",\"name\":\"CarrierTrkgDlvry\",\"fields\":[{\"name\":\"containerNumber\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"customerLoadId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"manifestNumber\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"parcelTrackNumber\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"proNumber\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"sealNumber\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"totalNoofWMSShipmentsInTruck\",\"type\":\"int\"}]}},{\"name\":\"deliveryNumber\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"goodsIssueToDelivery\",\"type\":{\"type\":\"record\",\"name\":\"ShpmentConfInGoodsActvtsIssueToDlvry\",\"fields\":[{\"name\":\"shippedDeliveryDate\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}},{\"name\":\"partnerDetails\",\"type\":{\"type\":\"record\",\"name\":\"PartnerDetails\",\"fields\":[{\"name\":\"parcelType\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}},{\"name\":\"plantId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"shipmentConfirmationItems\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ShpmntConfInItem\",\"fields\":[{\"name\":\"deliveryStatus\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"itemLabelDetailsList\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ItemLabelDetails\",\"fields\":[{\"name\":\"cartonLabelId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"labelType\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"palletLabelId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"palletNumber\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"quantity\",\"type\":\"int\"}]},\"java-class\":\"java.util.List\"}},{\"name\":\"itemNumber\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"productId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"quantity\",\"type\":\"int\"},{\"name\":\"serialNumbers\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"java-class\":\"java.util.List\"}}]},\"java-class\":\"java.util.List\"}},{\"name\":\"storageLocation\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"totalPackagesInDelivery\",\"type\":\"int\"},{\"name\":\"totalWeight\",\"type\":\"float\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<DeliveryDetails> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<DeliveryDetails> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<DeliveryDetails> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<DeliveryDetails> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<DeliveryDetails> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this DeliveryDetails to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a DeliveryDetails from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a DeliveryDetails instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static DeliveryDetails fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private com.integrations.orderprocessing.kafka.schema.CarrierTrkgDlvry carrierTrackingDetails;
  private java.lang.String deliveryNumber;
  private com.integrations.orderprocessing.kafka.schema.ShpmentConfInGoodsActvtsIssueToDlvry goodsIssueToDelivery;
  private com.integrations.orderprocessing.kafka.schema.PartnerDetails partnerDetails;
  private java.lang.String plantId;
  private java.util.List<com.integrations.orderprocessing.kafka.schema.ShpmntConfInItem> shipmentConfirmationItems;
  private java.lang.String storageLocation;
  private int totalPackagesInDelivery;
  private float totalWeight;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public DeliveryDetails() {}

  /**
   * All-args constructor.
   * @param carrierTrackingDetails The new value for carrierTrackingDetails
   * @param deliveryNumber The new value for deliveryNumber
   * @param goodsIssueToDelivery The new value for goodsIssueToDelivery
   * @param partnerDetails The new value for partnerDetails
   * @param plantId The new value for plantId
   * @param shipmentConfirmationItems The new value for shipmentConfirmationItems
   * @param storageLocation The new value for storageLocation
   * @param totalPackagesInDelivery The new value for totalPackagesInDelivery
   * @param totalWeight The new value for totalWeight
   */
  public DeliveryDetails(com.integrations.orderprocessing.kafka.schema.CarrierTrkgDlvry carrierTrackingDetails, java.lang.String deliveryNumber, com.integrations.orderprocessing.kafka.schema.ShpmentConfInGoodsActvtsIssueToDlvry goodsIssueToDelivery, com.integrations.orderprocessing.kafka.schema.PartnerDetails partnerDetails, java.lang.String plantId, java.util.List<com.integrations.orderprocessing.kafka.schema.ShpmntConfInItem> shipmentConfirmationItems, java.lang.String storageLocation, java.lang.Integer totalPackagesInDelivery, java.lang.Float totalWeight) {
    this.carrierTrackingDetails = carrierTrackingDetails;
    this.deliveryNumber = deliveryNumber;
    this.goodsIssueToDelivery = goodsIssueToDelivery;
    this.partnerDetails = partnerDetails;
    this.plantId = plantId;
    this.shipmentConfirmationItems = shipmentConfirmationItems;
    this.storageLocation = storageLocation;
    this.totalPackagesInDelivery = totalPackagesInDelivery;
    this.totalWeight = totalWeight;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return carrierTrackingDetails;
    case 1: return deliveryNumber;
    case 2: return goodsIssueToDelivery;
    case 3: return partnerDetails;
    case 4: return plantId;
    case 5: return shipmentConfirmationItems;
    case 6: return storageLocation;
    case 7: return totalPackagesInDelivery;
    case 8: return totalWeight;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: carrierTrackingDetails = (com.integrations.orderprocessing.kafka.schema.CarrierTrkgDlvry)value$; break;
    case 1: deliveryNumber = value$ != null ? value$.toString() : null; break;
    case 2: goodsIssueToDelivery = (com.integrations.orderprocessing.kafka.schema.ShpmentConfInGoodsActvtsIssueToDlvry)value$; break;
    case 3: partnerDetails = (com.integrations.orderprocessing.kafka.schema.PartnerDetails)value$; break;
    case 4: plantId = value$ != null ? value$.toString() : null; break;
    case 5: shipmentConfirmationItems = (java.util.List<com.integrations.orderprocessing.kafka.schema.ShpmntConfInItem>)value$; break;
    case 6: storageLocation = value$ != null ? value$.toString() : null; break;
    case 7: totalPackagesInDelivery = (java.lang.Integer)value$; break;
    case 8: totalWeight = (java.lang.Float)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'carrierTrackingDetails' field.
   * @return The value of the 'carrierTrackingDetails' field.
   */
  public com.integrations.orderprocessing.kafka.schema.CarrierTrkgDlvry getCarrierTrackingDetails() {
    return carrierTrackingDetails;
  }


  /**
   * Sets the value of the 'carrierTrackingDetails' field.
   * @param value the value to set.
   */
  public void setCarrierTrackingDetails(com.integrations.orderprocessing.kafka.schema.CarrierTrkgDlvry value) {
    this.carrierTrackingDetails = value;
  }

  /**
   * Gets the value of the 'deliveryNumber' field.
   * @return The value of the 'deliveryNumber' field.
   */
  public java.lang.String getDeliveryNumber() {
    return deliveryNumber;
  }


  /**
   * Sets the value of the 'deliveryNumber' field.
   * @param value the value to set.
   */
  public void setDeliveryNumber(java.lang.String value) {
    this.deliveryNumber = value;
  }

  /**
   * Gets the value of the 'goodsIssueToDelivery' field.
   * @return The value of the 'goodsIssueToDelivery' field.
   */
  public com.integrations.orderprocessing.kafka.schema.ShpmentConfInGoodsActvtsIssueToDlvry getGoodsIssueToDelivery() {
    return goodsIssueToDelivery;
  }


  /**
   * Sets the value of the 'goodsIssueToDelivery' field.
   * @param value the value to set.
   */
  public void setGoodsIssueToDelivery(com.integrations.orderprocessing.kafka.schema.ShpmentConfInGoodsActvtsIssueToDlvry value) {
    this.goodsIssueToDelivery = value;
  }

  /**
   * Gets the value of the 'partnerDetails' field.
   * @return The value of the 'partnerDetails' field.
   */
  public com.integrations.orderprocessing.kafka.schema.PartnerDetails getPartnerDetails() {
    return partnerDetails;
  }


  /**
   * Sets the value of the 'partnerDetails' field.
   * @param value the value to set.
   */
  public void setPartnerDetails(com.integrations.orderprocessing.kafka.schema.PartnerDetails value) {
    this.partnerDetails = value;
  }

  /**
   * Gets the value of the 'plantId' field.
   * @return The value of the 'plantId' field.
   */
  public java.lang.String getPlantId() {
    return plantId;
  }


  /**
   * Sets the value of the 'plantId' field.
   * @param value the value to set.
   */
  public void setPlantId(java.lang.String value) {
    this.plantId = value;
  }

  /**
   * Gets the value of the 'shipmentConfirmationItems' field.
   * @return The value of the 'shipmentConfirmationItems' field.
   */
  public java.util.List<com.integrations.orderprocessing.kafka.schema.ShpmntConfInItem> getShipmentConfirmationItems() {
    return shipmentConfirmationItems;
  }


  /**
   * Sets the value of the 'shipmentConfirmationItems' field.
   * @param value the value to set.
   */
  public void setShipmentConfirmationItems(java.util.List<com.integrations.orderprocessing.kafka.schema.ShpmntConfInItem> value) {
    this.shipmentConfirmationItems = value;
  }

  /**
   * Gets the value of the 'storageLocation' field.
   * @return The value of the 'storageLocation' field.
   */
  public java.lang.String getStorageLocation() {
    return storageLocation;
  }


  /**
   * Sets the value of the 'storageLocation' field.
   * @param value the value to set.
   */
  public void setStorageLocation(java.lang.String value) {
    this.storageLocation = value;
  }

  /**
   * Gets the value of the 'totalPackagesInDelivery' field.
   * @return The value of the 'totalPackagesInDelivery' field.
   */
  public int getTotalPackagesInDelivery() {
    return totalPackagesInDelivery;
  }


  /**
   * Sets the value of the 'totalPackagesInDelivery' field.
   * @param value the value to set.
   */
  public void setTotalPackagesInDelivery(int value) {
    this.totalPackagesInDelivery = value;
  }

  /**
   * Gets the value of the 'totalWeight' field.
   * @return The value of the 'totalWeight' field.
   */
  public float getTotalWeight() {
    return totalWeight;
  }


  /**
   * Sets the value of the 'totalWeight' field.
   * @param value the value to set.
   */
  public void setTotalWeight(float value) {
    this.totalWeight = value;
  }

  /**
   * Creates a new DeliveryDetails RecordBuilder.
   * @return A new DeliveryDetails RecordBuilder
   */
  public static com.integrations.orderprocessing.kafka.schema.DeliveryDetails.Builder newBuilder() {
    return new com.integrations.orderprocessing.kafka.schema.DeliveryDetails.Builder();
  }

  /**
   * Creates a new DeliveryDetails RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new DeliveryDetails RecordBuilder
   */
  public static com.integrations.orderprocessing.kafka.schema.DeliveryDetails.Builder newBuilder(com.integrations.orderprocessing.kafka.schema.DeliveryDetails.Builder other) {
    if (other == null) {
      return new com.integrations.orderprocessing.kafka.schema.DeliveryDetails.Builder();
    } else {
      return new com.integrations.orderprocessing.kafka.schema.DeliveryDetails.Builder(other);
    }
  }

  /**
   * Creates a new DeliveryDetails RecordBuilder by copying an existing DeliveryDetails instance.
   * @param other The existing instance to copy.
   * @return A new DeliveryDetails RecordBuilder
   */
  public static com.integrations.orderprocessing.kafka.schema.DeliveryDetails.Builder newBuilder(com.integrations.orderprocessing.kafka.schema.DeliveryDetails other) {
    if (other == null) {
      return new com.integrations.orderprocessing.kafka.schema.DeliveryDetails.Builder();
    } else {
      return new com.integrations.orderprocessing.kafka.schema.DeliveryDetails.Builder(other);
    }
  }

  /**
   * RecordBuilder for DeliveryDetails instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<DeliveryDetails>
    implements org.apache.avro.data.RecordBuilder<DeliveryDetails> {

    private com.integrations.orderprocessing.kafka.schema.CarrierTrkgDlvry carrierTrackingDetails;
    private com.integrations.orderprocessing.kafka.schema.CarrierTrkgDlvry.Builder carrierTrackingDetailsBuilder;
    private java.lang.String deliveryNumber;
    private com.integrations.orderprocessing.kafka.schema.ShpmentConfInGoodsActvtsIssueToDlvry goodsIssueToDelivery;
    private com.integrations.orderprocessing.kafka.schema.ShpmentConfInGoodsActvtsIssueToDlvry.Builder goodsIssueToDeliveryBuilder;
    private com.integrations.orderprocessing.kafka.schema.PartnerDetails partnerDetails;
    private com.integrations.orderprocessing.kafka.schema.PartnerDetails.Builder partnerDetailsBuilder;
    private java.lang.String plantId;
    private java.util.List<com.integrations.orderprocessing.kafka.schema.ShpmntConfInItem> shipmentConfirmationItems;
    private java.lang.String storageLocation;
    private int totalPackagesInDelivery;
    private float totalWeight;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.integrations.orderprocessing.kafka.schema.DeliveryDetails.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.carrierTrackingDetails)) {
        this.carrierTrackingDetails = data().deepCopy(fields()[0].schema(), other.carrierTrackingDetails);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (other.hasCarrierTrackingDetailsBuilder()) {
        this.carrierTrackingDetailsBuilder = com.integrations.orderprocessing.kafka.schema.CarrierTrkgDlvry.newBuilder(other.getCarrierTrackingDetailsBuilder());
      }
      if (isValidValue(fields()[1], other.deliveryNumber)) {
        this.deliveryNumber = data().deepCopy(fields()[1].schema(), other.deliveryNumber);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.goodsIssueToDelivery)) {
        this.goodsIssueToDelivery = data().deepCopy(fields()[2].schema(), other.goodsIssueToDelivery);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (other.hasGoodsIssueToDeliveryBuilder()) {
        this.goodsIssueToDeliveryBuilder = com.integrations.orderprocessing.kafka.schema.ShpmentConfInGoodsActvtsIssueToDlvry.newBuilder(other.getGoodsIssueToDeliveryBuilder());
      }
      if (isValidValue(fields()[3], other.partnerDetails)) {
        this.partnerDetails = data().deepCopy(fields()[3].schema(), other.partnerDetails);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (other.hasPartnerDetailsBuilder()) {
        this.partnerDetailsBuilder = com.integrations.orderprocessing.kafka.schema.PartnerDetails.newBuilder(other.getPartnerDetailsBuilder());
      }
      if (isValidValue(fields()[4], other.plantId)) {
        this.plantId = data().deepCopy(fields()[4].schema(), other.plantId);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.shipmentConfirmationItems)) {
        this.shipmentConfirmationItems = data().deepCopy(fields()[5].schema(), other.shipmentConfirmationItems);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.storageLocation)) {
        this.storageLocation = data().deepCopy(fields()[6].schema(), other.storageLocation);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.totalPackagesInDelivery)) {
        this.totalPackagesInDelivery = data().deepCopy(fields()[7].schema(), other.totalPackagesInDelivery);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.totalWeight)) {
        this.totalWeight = data().deepCopy(fields()[8].schema(), other.totalWeight);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
    }

    /**
     * Creates a Builder by copying an existing DeliveryDetails instance
     * @param other The existing instance to copy.
     */
    private Builder(com.integrations.orderprocessing.kafka.schema.DeliveryDetails other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.carrierTrackingDetails)) {
        this.carrierTrackingDetails = data().deepCopy(fields()[0].schema(), other.carrierTrackingDetails);
        fieldSetFlags()[0] = true;
      }
      this.carrierTrackingDetailsBuilder = null;
      if (isValidValue(fields()[1], other.deliveryNumber)) {
        this.deliveryNumber = data().deepCopy(fields()[1].schema(), other.deliveryNumber);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.goodsIssueToDelivery)) {
        this.goodsIssueToDelivery = data().deepCopy(fields()[2].schema(), other.goodsIssueToDelivery);
        fieldSetFlags()[2] = true;
      }
      this.goodsIssueToDeliveryBuilder = null;
      if (isValidValue(fields()[3], other.partnerDetails)) {
        this.partnerDetails = data().deepCopy(fields()[3].schema(), other.partnerDetails);
        fieldSetFlags()[3] = true;
      }
      this.partnerDetailsBuilder = null;
      if (isValidValue(fields()[4], other.plantId)) {
        this.plantId = data().deepCopy(fields()[4].schema(), other.plantId);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.shipmentConfirmationItems)) {
        this.shipmentConfirmationItems = data().deepCopy(fields()[5].schema(), other.shipmentConfirmationItems);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.storageLocation)) {
        this.storageLocation = data().deepCopy(fields()[6].schema(), other.storageLocation);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.totalPackagesInDelivery)) {
        this.totalPackagesInDelivery = data().deepCopy(fields()[7].schema(), other.totalPackagesInDelivery);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.totalWeight)) {
        this.totalWeight = data().deepCopy(fields()[8].schema(), other.totalWeight);
        fieldSetFlags()[8] = true;
      }
    }

    /**
      * Gets the value of the 'carrierTrackingDetails' field.
      * @return The value.
      */
    public com.integrations.orderprocessing.kafka.schema.CarrierTrkgDlvry getCarrierTrackingDetails() {
      return carrierTrackingDetails;
    }


    /**
      * Sets the value of the 'carrierTrackingDetails' field.
      * @param value The value of 'carrierTrackingDetails'.
      * @return This builder.
      */
    public com.integrations.orderprocessing.kafka.schema.DeliveryDetails.Builder setCarrierTrackingDetails(com.integrations.orderprocessing.kafka.schema.CarrierTrkgDlvry value) {
      validate(fields()[0], value);
      this.carrierTrackingDetailsBuilder = null;
      this.carrierTrackingDetails = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'carrierTrackingDetails' field has been set.
      * @return True if the 'carrierTrackingDetails' field has been set, false otherwise.
      */
    public boolean hasCarrierTrackingDetails() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'carrierTrackingDetails' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.integrations.orderprocessing.kafka.schema.CarrierTrkgDlvry.Builder getCarrierTrackingDetailsBuilder() {
      if (carrierTrackingDetailsBuilder == null) {
        if (hasCarrierTrackingDetails()) {
          setCarrierTrackingDetailsBuilder(com.integrations.orderprocessing.kafka.schema.CarrierTrkgDlvry.newBuilder(carrierTrackingDetails));
        } else {
          setCarrierTrackingDetailsBuilder(com.integrations.orderprocessing.kafka.schema.CarrierTrkgDlvry.newBuilder());
        }
      }
      return carrierTrackingDetailsBuilder;
    }

    /**
     * Sets the Builder instance for the 'carrierTrackingDetails' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.integrations.orderprocessing.kafka.schema.DeliveryDetails.Builder setCarrierTrackingDetailsBuilder(com.integrations.orderprocessing.kafka.schema.CarrierTrkgDlvry.Builder value) {
      clearCarrierTrackingDetails();
      carrierTrackingDetailsBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'carrierTrackingDetails' field has an active Builder instance
     * @return True if the 'carrierTrackingDetails' field has an active Builder instance
     */
    public boolean hasCarrierTrackingDetailsBuilder() {
      return carrierTrackingDetailsBuilder != null;
    }

    /**
      * Clears the value of the 'carrierTrackingDetails' field.
      * @return This builder.
      */
    public com.integrations.orderprocessing.kafka.schema.DeliveryDetails.Builder clearCarrierTrackingDetails() {
      carrierTrackingDetails = null;
      carrierTrackingDetailsBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'deliveryNumber' field.
      * @return The value.
      */
    public java.lang.String getDeliveryNumber() {
      return deliveryNumber;
    }


    /**
      * Sets the value of the 'deliveryNumber' field.
      * @param value The value of 'deliveryNumber'.
      * @return This builder.
      */
    public com.integrations.orderprocessing.kafka.schema.DeliveryDetails.Builder setDeliveryNumber(java.lang.String value) {
      validate(fields()[1], value);
      this.deliveryNumber = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'deliveryNumber' field has been set.
      * @return True if the 'deliveryNumber' field has been set, false otherwise.
      */
    public boolean hasDeliveryNumber() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'deliveryNumber' field.
      * @return This builder.
      */
    public com.integrations.orderprocessing.kafka.schema.DeliveryDetails.Builder clearDeliveryNumber() {
      deliveryNumber = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'goodsIssueToDelivery' field.
      * @return The value.
      */
    public com.integrations.orderprocessing.kafka.schema.ShpmentConfInGoodsActvtsIssueToDlvry getGoodsIssueToDelivery() {
      return goodsIssueToDelivery;
    }


    /**
      * Sets the value of the 'goodsIssueToDelivery' field.
      * @param value The value of 'goodsIssueToDelivery'.
      * @return This builder.
      */
    public com.integrations.orderprocessing.kafka.schema.DeliveryDetails.Builder setGoodsIssueToDelivery(com.integrations.orderprocessing.kafka.schema.ShpmentConfInGoodsActvtsIssueToDlvry value) {
      validate(fields()[2], value);
      this.goodsIssueToDeliveryBuilder = null;
      this.goodsIssueToDelivery = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'goodsIssueToDelivery' field has been set.
      * @return True if the 'goodsIssueToDelivery' field has been set, false otherwise.
      */
    public boolean hasGoodsIssueToDelivery() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'goodsIssueToDelivery' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.integrations.orderprocessing.kafka.schema.ShpmentConfInGoodsActvtsIssueToDlvry.Builder getGoodsIssueToDeliveryBuilder() {
      if (goodsIssueToDeliveryBuilder == null) {
        if (hasGoodsIssueToDelivery()) {
          setGoodsIssueToDeliveryBuilder(com.integrations.orderprocessing.kafka.schema.ShpmentConfInGoodsActvtsIssueToDlvry.newBuilder(goodsIssueToDelivery));
        } else {
          setGoodsIssueToDeliveryBuilder(com.integrations.orderprocessing.kafka.schema.ShpmentConfInGoodsActvtsIssueToDlvry.newBuilder());
        }
      }
      return goodsIssueToDeliveryBuilder;
    }

    /**
     * Sets the Builder instance for the 'goodsIssueToDelivery' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.integrations.orderprocessing.kafka.schema.DeliveryDetails.Builder setGoodsIssueToDeliveryBuilder(com.integrations.orderprocessing.kafka.schema.ShpmentConfInGoodsActvtsIssueToDlvry.Builder value) {
      clearGoodsIssueToDelivery();
      goodsIssueToDeliveryBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'goodsIssueToDelivery' field has an active Builder instance
     * @return True if the 'goodsIssueToDelivery' field has an active Builder instance
     */
    public boolean hasGoodsIssueToDeliveryBuilder() {
      return goodsIssueToDeliveryBuilder != null;
    }

    /**
      * Clears the value of the 'goodsIssueToDelivery' field.
      * @return This builder.
      */
    public com.integrations.orderprocessing.kafka.schema.DeliveryDetails.Builder clearGoodsIssueToDelivery() {
      goodsIssueToDelivery = null;
      goodsIssueToDeliveryBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'partnerDetails' field.
      * @return The value.
      */
    public com.integrations.orderprocessing.kafka.schema.PartnerDetails getPartnerDetails() {
      return partnerDetails;
    }


    /**
      * Sets the value of the 'partnerDetails' field.
      * @param value The value of 'partnerDetails'.
      * @return This builder.
      */
    public com.integrations.orderprocessing.kafka.schema.DeliveryDetails.Builder setPartnerDetails(com.integrations.orderprocessing.kafka.schema.PartnerDetails value) {
      validate(fields()[3], value);
      this.partnerDetailsBuilder = null;
      this.partnerDetails = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'partnerDetails' field has been set.
      * @return True if the 'partnerDetails' field has been set, false otherwise.
      */
    public boolean hasPartnerDetails() {
      return fieldSetFlags()[3];
    }

    /**
     * Gets the Builder instance for the 'partnerDetails' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.integrations.orderprocessing.kafka.schema.PartnerDetails.Builder getPartnerDetailsBuilder() {
      if (partnerDetailsBuilder == null) {
        if (hasPartnerDetails()) {
          setPartnerDetailsBuilder(com.integrations.orderprocessing.kafka.schema.PartnerDetails.newBuilder(partnerDetails));
        } else {
          setPartnerDetailsBuilder(com.integrations.orderprocessing.kafka.schema.PartnerDetails.newBuilder());
        }
      }
      return partnerDetailsBuilder;
    }

    /**
     * Sets the Builder instance for the 'partnerDetails' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.integrations.orderprocessing.kafka.schema.DeliveryDetails.Builder setPartnerDetailsBuilder(com.integrations.orderprocessing.kafka.schema.PartnerDetails.Builder value) {
      clearPartnerDetails();
      partnerDetailsBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'partnerDetails' field has an active Builder instance
     * @return True if the 'partnerDetails' field has an active Builder instance
     */
    public boolean hasPartnerDetailsBuilder() {
      return partnerDetailsBuilder != null;
    }

    /**
      * Clears the value of the 'partnerDetails' field.
      * @return This builder.
      */
    public com.integrations.orderprocessing.kafka.schema.DeliveryDetails.Builder clearPartnerDetails() {
      partnerDetails = null;
      partnerDetailsBuilder = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'plantId' field.
      * @return The value.
      */
    public java.lang.String getPlantId() {
      return plantId;
    }


    /**
      * Sets the value of the 'plantId' field.
      * @param value The value of 'plantId'.
      * @return This builder.
      */
    public com.integrations.orderprocessing.kafka.schema.DeliveryDetails.Builder setPlantId(java.lang.String value) {
      validate(fields()[4], value);
      this.plantId = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'plantId' field has been set.
      * @return True if the 'plantId' field has been set, false otherwise.
      */
    public boolean hasPlantId() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'plantId' field.
      * @return This builder.
      */
    public com.integrations.orderprocessing.kafka.schema.DeliveryDetails.Builder clearPlantId() {
      plantId = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'shipmentConfirmationItems' field.
      * @return The value.
      */
    public java.util.List<com.integrations.orderprocessing.kafka.schema.ShpmntConfInItem> getShipmentConfirmationItems() {
      return shipmentConfirmationItems;
    }


    /**
      * Sets the value of the 'shipmentConfirmationItems' field.
      * @param value The value of 'shipmentConfirmationItems'.
      * @return This builder.
      */
    public com.integrations.orderprocessing.kafka.schema.DeliveryDetails.Builder setShipmentConfirmationItems(java.util.List<com.integrations.orderprocessing.kafka.schema.ShpmntConfInItem> value) {
      validate(fields()[5], value);
      this.shipmentConfirmationItems = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'shipmentConfirmationItems' field has been set.
      * @return True if the 'shipmentConfirmationItems' field has been set, false otherwise.
      */
    public boolean hasShipmentConfirmationItems() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'shipmentConfirmationItems' field.
      * @return This builder.
      */
    public com.integrations.orderprocessing.kafka.schema.DeliveryDetails.Builder clearShipmentConfirmationItems() {
      shipmentConfirmationItems = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'storageLocation' field.
      * @return The value.
      */
    public java.lang.String getStorageLocation() {
      return storageLocation;
    }


    /**
      * Sets the value of the 'storageLocation' field.
      * @param value The value of 'storageLocation'.
      * @return This builder.
      */
    public com.integrations.orderprocessing.kafka.schema.DeliveryDetails.Builder setStorageLocation(java.lang.String value) {
      validate(fields()[6], value);
      this.storageLocation = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'storageLocation' field has been set.
      * @return True if the 'storageLocation' field has been set, false otherwise.
      */
    public boolean hasStorageLocation() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'storageLocation' field.
      * @return This builder.
      */
    public com.integrations.orderprocessing.kafka.schema.DeliveryDetails.Builder clearStorageLocation() {
      storageLocation = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalPackagesInDelivery' field.
      * @return The value.
      */
    public int getTotalPackagesInDelivery() {
      return totalPackagesInDelivery;
    }


    /**
      * Sets the value of the 'totalPackagesInDelivery' field.
      * @param value The value of 'totalPackagesInDelivery'.
      * @return This builder.
      */
    public com.integrations.orderprocessing.kafka.schema.DeliveryDetails.Builder setTotalPackagesInDelivery(int value) {
      validate(fields()[7], value);
      this.totalPackagesInDelivery = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'totalPackagesInDelivery' field has been set.
      * @return True if the 'totalPackagesInDelivery' field has been set, false otherwise.
      */
    public boolean hasTotalPackagesInDelivery() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'totalPackagesInDelivery' field.
      * @return This builder.
      */
    public com.integrations.orderprocessing.kafka.schema.DeliveryDetails.Builder clearTotalPackagesInDelivery() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalWeight' field.
      * @return The value.
      */
    public float getTotalWeight() {
      return totalWeight;
    }


    /**
      * Sets the value of the 'totalWeight' field.
      * @param value The value of 'totalWeight'.
      * @return This builder.
      */
    public com.integrations.orderprocessing.kafka.schema.DeliveryDetails.Builder setTotalWeight(float value) {
      validate(fields()[8], value);
      this.totalWeight = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'totalWeight' field has been set.
      * @return True if the 'totalWeight' field has been set, false otherwise.
      */
    public boolean hasTotalWeight() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'totalWeight' field.
      * @return This builder.
      */
    public com.integrations.orderprocessing.kafka.schema.DeliveryDetails.Builder clearTotalWeight() {
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public DeliveryDetails build() {
      try {
        DeliveryDetails record = new DeliveryDetails();
        if (carrierTrackingDetailsBuilder != null) {
          try {
            record.carrierTrackingDetails = this.carrierTrackingDetailsBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("carrierTrackingDetails"));
            throw e;
          }
        } else {
          record.carrierTrackingDetails = fieldSetFlags()[0] ? this.carrierTrackingDetails : (com.integrations.orderprocessing.kafka.schema.CarrierTrkgDlvry) defaultValue(fields()[0]);
        }
        record.deliveryNumber = fieldSetFlags()[1] ? this.deliveryNumber : (java.lang.String) defaultValue(fields()[1]);
        if (goodsIssueToDeliveryBuilder != null) {
          try {
            record.goodsIssueToDelivery = this.goodsIssueToDeliveryBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("goodsIssueToDelivery"));
            throw e;
          }
        } else {
          record.goodsIssueToDelivery = fieldSetFlags()[2] ? this.goodsIssueToDelivery : (com.integrations.orderprocessing.kafka.schema.ShpmentConfInGoodsActvtsIssueToDlvry) defaultValue(fields()[2]);
        }
        if (partnerDetailsBuilder != null) {
          try {
            record.partnerDetails = this.partnerDetailsBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("partnerDetails"));
            throw e;
          }
        } else {
          record.partnerDetails = fieldSetFlags()[3] ? this.partnerDetails : (com.integrations.orderprocessing.kafka.schema.PartnerDetails) defaultValue(fields()[3]);
        }
        record.plantId = fieldSetFlags()[4] ? this.plantId : (java.lang.String) defaultValue(fields()[4]);
        record.shipmentConfirmationItems = fieldSetFlags()[5] ? this.shipmentConfirmationItems : (java.util.List<com.integrations.orderprocessing.kafka.schema.ShpmntConfInItem>) defaultValue(fields()[5]);
        record.storageLocation = fieldSetFlags()[6] ? this.storageLocation : (java.lang.String) defaultValue(fields()[6]);
        record.totalPackagesInDelivery = fieldSetFlags()[7] ? this.totalPackagesInDelivery : (java.lang.Integer) defaultValue(fields()[7]);
        record.totalWeight = fieldSetFlags()[8] ? this.totalWeight : (java.lang.Float) defaultValue(fields()[8]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<DeliveryDetails>
    WRITER$ = (org.apache.avro.io.DatumWriter<DeliveryDetails>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<DeliveryDetails>
    READER$ = (org.apache.avro.io.DatumReader<DeliveryDetails>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    this.carrierTrackingDetails.customEncode(out);

    out.writeString(this.deliveryNumber);

    this.goodsIssueToDelivery.customEncode(out);

    this.partnerDetails.customEncode(out);

    out.writeString(this.plantId);

    long size0 = this.shipmentConfirmationItems.size();
    out.writeArrayStart();
    out.setItemCount(size0);
    long actualSize0 = 0;
    for (com.integrations.orderprocessing.kafka.schema.ShpmntConfInItem e0: this.shipmentConfirmationItems) {
      actualSize0++;
      out.startItem();
      e0.customEncode(out);
    }
    out.writeArrayEnd();
    if (actualSize0 != size0)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");

    out.writeString(this.storageLocation);

    out.writeInt(this.totalPackagesInDelivery);

    out.writeFloat(this.totalWeight);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (this.carrierTrackingDetails == null) {
        this.carrierTrackingDetails = new com.integrations.orderprocessing.kafka.schema.CarrierTrkgDlvry();
      }
      this.carrierTrackingDetails.customDecode(in);

      this.deliveryNumber = in.readString();

      if (this.goodsIssueToDelivery == null) {
        this.goodsIssueToDelivery = new com.integrations.orderprocessing.kafka.schema.ShpmentConfInGoodsActvtsIssueToDlvry();
      }
      this.goodsIssueToDelivery.customDecode(in);

      if (this.partnerDetails == null) {
        this.partnerDetails = new com.integrations.orderprocessing.kafka.schema.PartnerDetails();
      }
      this.partnerDetails.customDecode(in);

      this.plantId = in.readString();

      long size0 = in.readArrayStart();
      java.util.List<com.integrations.orderprocessing.kafka.schema.ShpmntConfInItem> a0 = this.shipmentConfirmationItems;
      if (a0 == null) {
        a0 = new SpecificData.Array<com.integrations.orderprocessing.kafka.schema.ShpmntConfInItem>((int)size0, SCHEMA$.getField("shipmentConfirmationItems").schema());
        this.shipmentConfirmationItems = a0;
      } else a0.clear();
      SpecificData.Array<com.integrations.orderprocessing.kafka.schema.ShpmntConfInItem> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<com.integrations.orderprocessing.kafka.schema.ShpmntConfInItem>)a0 : null);
      for ( ; 0 < size0; size0 = in.arrayNext()) {
        for ( ; size0 != 0; size0--) {
          com.integrations.orderprocessing.kafka.schema.ShpmntConfInItem e0 = (ga0 != null ? ga0.peek() : null);
          if (e0 == null) {
            e0 = new com.integrations.orderprocessing.kafka.schema.ShpmntConfInItem();
          }
          e0.customDecode(in);
          a0.add(e0);
        }
      }

      this.storageLocation = in.readString();

      this.totalPackagesInDelivery = in.readInt();

      this.totalWeight = in.readFloat();

    } else {
      for (int i = 0; i < 9; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (this.carrierTrackingDetails == null) {
            this.carrierTrackingDetails = new com.integrations.orderprocessing.kafka.schema.CarrierTrkgDlvry();
          }
          this.carrierTrackingDetails.customDecode(in);
          break;

        case 1:
          this.deliveryNumber = in.readString();
          break;

        case 2:
          if (this.goodsIssueToDelivery == null) {
            this.goodsIssueToDelivery = new com.integrations.orderprocessing.kafka.schema.ShpmentConfInGoodsActvtsIssueToDlvry();
          }
          this.goodsIssueToDelivery.customDecode(in);
          break;

        case 3:
          if (this.partnerDetails == null) {
            this.partnerDetails = new com.integrations.orderprocessing.kafka.schema.PartnerDetails();
          }
          this.partnerDetails.customDecode(in);
          break;

        case 4:
          this.plantId = in.readString();
          break;

        case 5:
          long size0 = in.readArrayStart();
          java.util.List<com.integrations.orderprocessing.kafka.schema.ShpmntConfInItem> a0 = this.shipmentConfirmationItems;
          if (a0 == null) {
            a0 = new SpecificData.Array<com.integrations.orderprocessing.kafka.schema.ShpmntConfInItem>((int)size0, SCHEMA$.getField("shipmentConfirmationItems").schema());
            this.shipmentConfirmationItems = a0;
          } else a0.clear();
          SpecificData.Array<com.integrations.orderprocessing.kafka.schema.ShpmntConfInItem> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<com.integrations.orderprocessing.kafka.schema.ShpmntConfInItem>)a0 : null);
          for ( ; 0 < size0; size0 = in.arrayNext()) {
            for ( ; size0 != 0; size0--) {
              com.integrations.orderprocessing.kafka.schema.ShpmntConfInItem e0 = (ga0 != null ? ga0.peek() : null);
              if (e0 == null) {
                e0 = new com.integrations.orderprocessing.kafka.schema.ShpmntConfInItem();
              }
              e0.customDecode(in);
              a0.add(e0);
            }
          }
          break;

        case 6:
          this.storageLocation = in.readString();
          break;

        case 7:
          this.totalPackagesInDelivery = in.readInt();
          break;

        case 8:
          this.totalWeight = in.readFloat();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










