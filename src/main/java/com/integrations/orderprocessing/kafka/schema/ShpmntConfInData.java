/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.integrations.orderprocessing.kafka.schema;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class ShpmntConfInData extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -6146408001145015917L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ShpmntConfInData\",\"namespace\":\"com.integrations.orderprocessing.kafka.schema\",\"fields\":[{\"name\":\"bolNumber\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"deliveryDetails\",\"type\":{\"type\":\"record\",\"name\":\"DeliveryDetails\",\"fields\":[{\"name\":\"carrierTrackingDetails\",\"type\":{\"type\":\"record\",\"name\":\"CarrierTrkgDlvry\",\"fields\":[{\"name\":\"containerNumber\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"customerLoadId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"manifestNumber\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"parcelTrackNumber\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"proNumber\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"sealNumber\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"totalNoofWMSShipmentsInTruck\",\"type\":\"int\"}]}},{\"name\":\"deliveryNumber\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"goodsIssueToDelivery\",\"type\":{\"type\":\"record\",\"name\":\"ShpmentConfInGoodsActvtsIssueToDlvry\",\"fields\":[{\"name\":\"shippedDeliveryDate\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}},{\"name\":\"partnerDetails\",\"type\":{\"type\":\"record\",\"name\":\"PartnerDetails\",\"fields\":[{\"name\":\"parcelType\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}},{\"name\":\"plantId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"shipmentConfirmationItems\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ShpmntConfInItem\",\"fields\":[{\"name\":\"deliveryStatus\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"itemLabelDetailsList\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ItemLabelDetails\",\"fields\":[{\"name\":\"cartonLabelId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"labelType\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"palletLabelId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"palletNumber\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"quantity\",\"type\":\"int\"}]},\"java-class\":\"java.util.List\"}},{\"name\":\"itemNumber\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"productId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"quantity\",\"type\":\"int\"},{\"name\":\"serialNumbers\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"java-class\":\"java.util.List\"}}]},\"java-class\":\"java.util.List\"}},{\"name\":\"storageLocation\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"totalPackagesInDelivery\",\"type\":\"int\"},{\"name\":\"totalWeight\",\"type\":\"float\"}]}},{\"name\":\"docNum\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"scId\",\"type\":\"long\"},{\"name\":\"sc_rec_id\",\"type\":\"long\"},{\"name\":\"shipmentNumber\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<ShpmntConfInData> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ShpmntConfInData> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<ShpmntConfInData> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<ShpmntConfInData> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<ShpmntConfInData> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this ShpmntConfInData to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a ShpmntConfInData from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a ShpmntConfInData instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static ShpmntConfInData fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.String bolNumber;
  private com.integrations.orderprocessing.kafka.schema.DeliveryDetails deliveryDetails;
  private java.lang.String docNum;
  private long scId;
  private long sc_rec_id;
  private java.lang.String shipmentNumber;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ShpmntConfInData() {}

  /**
   * All-args constructor.
   * @param bolNumber The new value for bolNumber
   * @param deliveryDetails The new value for deliveryDetails
   * @param docNum The new value for docNum
   * @param scId The new value for scId
   * @param sc_rec_id The new value for sc_rec_id
   * @param shipmentNumber The new value for shipmentNumber
   */
  public ShpmntConfInData(java.lang.String bolNumber, com.integrations.orderprocessing.kafka.schema.DeliveryDetails deliveryDetails, java.lang.String docNum, java.lang.Long scId, java.lang.Long sc_rec_id, java.lang.String shipmentNumber) {
    this.bolNumber = bolNumber;
    this.deliveryDetails = deliveryDetails;
    this.docNum = docNum;
    this.scId = scId;
    this.sc_rec_id = sc_rec_id;
    this.shipmentNumber = shipmentNumber;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return bolNumber;
    case 1: return deliveryDetails;
    case 2: return docNum;
    case 3: return scId;
    case 4: return sc_rec_id;
    case 5: return shipmentNumber;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: bolNumber = value$ != null ? value$.toString() : null; break;
    case 1: deliveryDetails = (com.integrations.orderprocessing.kafka.schema.DeliveryDetails)value$; break;
    case 2: docNum = value$ != null ? value$.toString() : null; break;
    case 3: scId = (java.lang.Long)value$; break;
    case 4: sc_rec_id = (java.lang.Long)value$; break;
    case 5: shipmentNumber = value$ != null ? value$.toString() : null; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'bolNumber' field.
   * @return The value of the 'bolNumber' field.
   */
  public java.lang.String getBolNumber() {
    return bolNumber;
  }


  /**
   * Sets the value of the 'bolNumber' field.
   * @param value the value to set.
   */
  public void setBolNumber(java.lang.String value) {
    this.bolNumber = value;
  }

  /**
   * Gets the value of the 'deliveryDetails' field.
   * @return The value of the 'deliveryDetails' field.
   */
  public com.integrations.orderprocessing.kafka.schema.DeliveryDetails getDeliveryDetails() {
    return deliveryDetails;
  }


  /**
   * Sets the value of the 'deliveryDetails' field.
   * @param value the value to set.
   */
  public void setDeliveryDetails(com.integrations.orderprocessing.kafka.schema.DeliveryDetails value) {
    this.deliveryDetails = value;
  }

  /**
   * Gets the value of the 'docNum' field.
   * @return The value of the 'docNum' field.
   */
  public java.lang.String getDocNum() {
    return docNum;
  }


  /**
   * Sets the value of the 'docNum' field.
   * @param value the value to set.
   */
  public void setDocNum(java.lang.String value) {
    this.docNum = value;
  }

  /**
   * Gets the value of the 'scId' field.
   * @return The value of the 'scId' field.
   */
  public long getScId() {
    return scId;
  }


  /**
   * Sets the value of the 'scId' field.
   * @param value the value to set.
   */
  public void setScId(long value) {
    this.scId = value;
  }

  /**
   * Gets the value of the 'sc_rec_id' field.
   * @return The value of the 'sc_rec_id' field.
   */
  public long getScRecId() {
    return sc_rec_id;
  }


  /**
   * Sets the value of the 'sc_rec_id' field.
   * @param value the value to set.
   */
  public void setScRecId(long value) {
    this.sc_rec_id = value;
  }

  /**
   * Gets the value of the 'shipmentNumber' field.
   * @return The value of the 'shipmentNumber' field.
   */
  public java.lang.String getShipmentNumber() {
    return shipmentNumber;
  }


  /**
   * Sets the value of the 'shipmentNumber' field.
   * @param value the value to set.
   */
  public void setShipmentNumber(java.lang.String value) {
    this.shipmentNumber = value;
  }

  /**
   * Creates a new ShpmntConfInData RecordBuilder.
   * @return A new ShpmntConfInData RecordBuilder
   */
  public static com.integrations.orderprocessing.kafka.schema.ShpmntConfInData.Builder newBuilder() {
    return new com.integrations.orderprocessing.kafka.schema.ShpmntConfInData.Builder();
  }

  /**
   * Creates a new ShpmntConfInData RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ShpmntConfInData RecordBuilder
   */
  public static com.integrations.orderprocessing.kafka.schema.ShpmntConfInData.Builder newBuilder(com.integrations.orderprocessing.kafka.schema.ShpmntConfInData.Builder other) {
    if (other == null) {
      return new com.integrations.orderprocessing.kafka.schema.ShpmntConfInData.Builder();
    } else {
      return new com.integrations.orderprocessing.kafka.schema.ShpmntConfInData.Builder(other);
    }
  }

  /**
   * Creates a new ShpmntConfInData RecordBuilder by copying an existing ShpmntConfInData instance.
   * @param other The existing instance to copy.
   * @return A new ShpmntConfInData RecordBuilder
   */
  public static com.integrations.orderprocessing.kafka.schema.ShpmntConfInData.Builder newBuilder(com.integrations.orderprocessing.kafka.schema.ShpmntConfInData other) {
    if (other == null) {
      return new com.integrations.orderprocessing.kafka.schema.ShpmntConfInData.Builder();
    } else {
      return new com.integrations.orderprocessing.kafka.schema.ShpmntConfInData.Builder(other);
    }
  }

  /**
   * RecordBuilder for ShpmntConfInData instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ShpmntConfInData>
    implements org.apache.avro.data.RecordBuilder<ShpmntConfInData> {

    private java.lang.String bolNumber;
    private com.integrations.orderprocessing.kafka.schema.DeliveryDetails deliveryDetails;
    private com.integrations.orderprocessing.kafka.schema.DeliveryDetails.Builder deliveryDetailsBuilder;
    private java.lang.String docNum;
    private long scId;
    private long sc_rec_id;
    private java.lang.String shipmentNumber;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.integrations.orderprocessing.kafka.schema.ShpmntConfInData.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.bolNumber)) {
        this.bolNumber = data().deepCopy(fields()[0].schema(), other.bolNumber);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.deliveryDetails)) {
        this.deliveryDetails = data().deepCopy(fields()[1].schema(), other.deliveryDetails);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (other.hasDeliveryDetailsBuilder()) {
        this.deliveryDetailsBuilder = com.integrations.orderprocessing.kafka.schema.DeliveryDetails.newBuilder(other.getDeliveryDetailsBuilder());
      }
      if (isValidValue(fields()[2], other.docNum)) {
        this.docNum = data().deepCopy(fields()[2].schema(), other.docNum);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.scId)) {
        this.scId = data().deepCopy(fields()[3].schema(), other.scId);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.sc_rec_id)) {
        this.sc_rec_id = data().deepCopy(fields()[4].schema(), other.sc_rec_id);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.shipmentNumber)) {
        this.shipmentNumber = data().deepCopy(fields()[5].schema(), other.shipmentNumber);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
    }

    /**
     * Creates a Builder by copying an existing ShpmntConfInData instance
     * @param other The existing instance to copy.
     */
    private Builder(com.integrations.orderprocessing.kafka.schema.ShpmntConfInData other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.bolNumber)) {
        this.bolNumber = data().deepCopy(fields()[0].schema(), other.bolNumber);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.deliveryDetails)) {
        this.deliveryDetails = data().deepCopy(fields()[1].schema(), other.deliveryDetails);
        fieldSetFlags()[1] = true;
      }
      this.deliveryDetailsBuilder = null;
      if (isValidValue(fields()[2], other.docNum)) {
        this.docNum = data().deepCopy(fields()[2].schema(), other.docNum);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.scId)) {
        this.scId = data().deepCopy(fields()[3].schema(), other.scId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.sc_rec_id)) {
        this.sc_rec_id = data().deepCopy(fields()[4].schema(), other.sc_rec_id);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.shipmentNumber)) {
        this.shipmentNumber = data().deepCopy(fields()[5].schema(), other.shipmentNumber);
        fieldSetFlags()[5] = true;
      }
    }

    /**
      * Gets the value of the 'bolNumber' field.
      * @return The value.
      */
    public java.lang.String getBolNumber() {
      return bolNumber;
    }


    /**
      * Sets the value of the 'bolNumber' field.
      * @param value The value of 'bolNumber'.
      * @return This builder.
      */
    public com.integrations.orderprocessing.kafka.schema.ShpmntConfInData.Builder setBolNumber(java.lang.String value) {
      validate(fields()[0], value);
      this.bolNumber = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'bolNumber' field has been set.
      * @return True if the 'bolNumber' field has been set, false otherwise.
      */
    public boolean hasBolNumber() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'bolNumber' field.
      * @return This builder.
      */
    public com.integrations.orderprocessing.kafka.schema.ShpmntConfInData.Builder clearBolNumber() {
      bolNumber = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'deliveryDetails' field.
      * @return The value.
      */
    public com.integrations.orderprocessing.kafka.schema.DeliveryDetails getDeliveryDetails() {
      return deliveryDetails;
    }


    /**
      * Sets the value of the 'deliveryDetails' field.
      * @param value The value of 'deliveryDetails'.
      * @return This builder.
      */
    public com.integrations.orderprocessing.kafka.schema.ShpmntConfInData.Builder setDeliveryDetails(com.integrations.orderprocessing.kafka.schema.DeliveryDetails value) {
      validate(fields()[1], value);
      this.deliveryDetailsBuilder = null;
      this.deliveryDetails = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'deliveryDetails' field has been set.
      * @return True if the 'deliveryDetails' field has been set, false otherwise.
      */
    public boolean hasDeliveryDetails() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'deliveryDetails' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.integrations.orderprocessing.kafka.schema.DeliveryDetails.Builder getDeliveryDetailsBuilder() {
      if (deliveryDetailsBuilder == null) {
        if (hasDeliveryDetails()) {
          setDeliveryDetailsBuilder(com.integrations.orderprocessing.kafka.schema.DeliveryDetails.newBuilder(deliveryDetails));
        } else {
          setDeliveryDetailsBuilder(com.integrations.orderprocessing.kafka.schema.DeliveryDetails.newBuilder());
        }
      }
      return deliveryDetailsBuilder;
    }

    /**
     * Sets the Builder instance for the 'deliveryDetails' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.integrations.orderprocessing.kafka.schema.ShpmntConfInData.Builder setDeliveryDetailsBuilder(com.integrations.orderprocessing.kafka.schema.DeliveryDetails.Builder value) {
      clearDeliveryDetails();
      deliveryDetailsBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'deliveryDetails' field has an active Builder instance
     * @return True if the 'deliveryDetails' field has an active Builder instance
     */
    public boolean hasDeliveryDetailsBuilder() {
      return deliveryDetailsBuilder != null;
    }

    /**
      * Clears the value of the 'deliveryDetails' field.
      * @return This builder.
      */
    public com.integrations.orderprocessing.kafka.schema.ShpmntConfInData.Builder clearDeliveryDetails() {
      deliveryDetails = null;
      deliveryDetailsBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'docNum' field.
      * @return The value.
      */
    public java.lang.String getDocNum() {
      return docNum;
    }


    /**
      * Sets the value of the 'docNum' field.
      * @param value The value of 'docNum'.
      * @return This builder.
      */
    public com.integrations.orderprocessing.kafka.schema.ShpmntConfInData.Builder setDocNum(java.lang.String value) {
      validate(fields()[2], value);
      this.docNum = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'docNum' field has been set.
      * @return True if the 'docNum' field has been set, false otherwise.
      */
    public boolean hasDocNum() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'docNum' field.
      * @return This builder.
      */
    public com.integrations.orderprocessing.kafka.schema.ShpmntConfInData.Builder clearDocNum() {
      docNum = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'scId' field.
      * @return The value.
      */
    public long getScId() {
      return scId;
    }


    /**
      * Sets the value of the 'scId' field.
      * @param value The value of 'scId'.
      * @return This builder.
      */
    public com.integrations.orderprocessing.kafka.schema.ShpmntConfInData.Builder setScId(long value) {
      validate(fields()[3], value);
      this.scId = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'scId' field has been set.
      * @return True if the 'scId' field has been set, false otherwise.
      */
    public boolean hasScId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'scId' field.
      * @return This builder.
      */
    public com.integrations.orderprocessing.kafka.schema.ShpmntConfInData.Builder clearScId() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'sc_rec_id' field.
      * @return The value.
      */
    public long getScRecId() {
      return sc_rec_id;
    }


    /**
      * Sets the value of the 'sc_rec_id' field.
      * @param value The value of 'sc_rec_id'.
      * @return This builder.
      */
    public com.integrations.orderprocessing.kafka.schema.ShpmntConfInData.Builder setScRecId(long value) {
      validate(fields()[4], value);
      this.sc_rec_id = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'sc_rec_id' field has been set.
      * @return True if the 'sc_rec_id' field has been set, false otherwise.
      */
    public boolean hasScRecId() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'sc_rec_id' field.
      * @return This builder.
      */
    public com.integrations.orderprocessing.kafka.schema.ShpmntConfInData.Builder clearScRecId() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'shipmentNumber' field.
      * @return The value.
      */
    public java.lang.String getShipmentNumber() {
      return shipmentNumber;
    }


    /**
      * Sets the value of the 'shipmentNumber' field.
      * @param value The value of 'shipmentNumber'.
      * @return This builder.
      */
    public com.integrations.orderprocessing.kafka.schema.ShpmntConfInData.Builder setShipmentNumber(java.lang.String value) {
      validate(fields()[5], value);
      this.shipmentNumber = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'shipmentNumber' field has been set.
      * @return True if the 'shipmentNumber' field has been set, false otherwise.
      */
    public boolean hasShipmentNumber() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'shipmentNumber' field.
      * @return This builder.
      */
    public com.integrations.orderprocessing.kafka.schema.ShpmntConfInData.Builder clearShipmentNumber() {
      shipmentNumber = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ShpmntConfInData build() {
      try {
        ShpmntConfInData record = new ShpmntConfInData();
        record.bolNumber = fieldSetFlags()[0] ? this.bolNumber : (java.lang.String) defaultValue(fields()[0]);
        if (deliveryDetailsBuilder != null) {
          try {
            record.deliveryDetails = this.deliveryDetailsBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("deliveryDetails"));
            throw e;
          }
        } else {
          record.deliveryDetails = fieldSetFlags()[1] ? this.deliveryDetails : (com.integrations.orderprocessing.kafka.schema.DeliveryDetails) defaultValue(fields()[1]);
        }
        record.docNum = fieldSetFlags()[2] ? this.docNum : (java.lang.String) defaultValue(fields()[2]);
        record.scId = fieldSetFlags()[3] ? this.scId : (java.lang.Long) defaultValue(fields()[3]);
        record.sc_rec_id = fieldSetFlags()[4] ? this.sc_rec_id : (java.lang.Long) defaultValue(fields()[4]);
        record.shipmentNumber = fieldSetFlags()[5] ? this.shipmentNumber : (java.lang.String) defaultValue(fields()[5]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ShpmntConfInData>
    WRITER$ = (org.apache.avro.io.DatumWriter<ShpmntConfInData>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ShpmntConfInData>
    READER$ = (org.apache.avro.io.DatumReader<ShpmntConfInData>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.bolNumber);

    this.deliveryDetails.customEncode(out);

    out.writeString(this.docNum);

    out.writeLong(this.scId);

    out.writeLong(this.sc_rec_id);

    out.writeString(this.shipmentNumber);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.bolNumber = in.readString();

      if (this.deliveryDetails == null) {
        this.deliveryDetails = new com.integrations.orderprocessing.kafka.schema.DeliveryDetails();
      }
      this.deliveryDetails.customDecode(in);

      this.docNum = in.readString();

      this.scId = in.readLong();

      this.sc_rec_id = in.readLong();

      this.shipmentNumber = in.readString();

    } else {
      for (int i = 0; i < 6; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.bolNumber = in.readString();
          break;

        case 1:
          if (this.deliveryDetails == null) {
            this.deliveryDetails = new com.integrations.orderprocessing.kafka.schema.DeliveryDetails();
          }
          this.deliveryDetails.customDecode(in);
          break;

        case 2:
          this.docNum = in.readString();
          break;

        case 3:
          this.scId = in.readLong();
          break;

        case 4:
          this.sc_rec_id = in.readLong();
          break;

        case 5:
          this.shipmentNumber = in.readString();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










